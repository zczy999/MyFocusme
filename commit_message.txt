feat: 完成第一阶段核心架构搭建

✅ 依赖更新:
- 添加Jackson JSON处理依赖到pom.xml

✅ 包结构创建:
- 创建src/main/java/com/tsymq/mode/包
- 创建src/main/java/com/tsymq/config/包  
- 创建src/main/java/com/tsymq/ui/包
- 创建src/main/java/com/tsymq/utils/包

✅ 核心类实现:
- AppConfig.java: 应用配置常量类，定义配置路径和常量
- ModeState.java: 模式状态数据类，支持JSON序列化和状态管理
- UserConfig.java: 用户配置数据类，支持个性化设置
- TimeUtils.java: 时间工具类，提供丰富的时间格式化功能
- ConfigManager.java: 配置管理类，负责JSON文件读写和状态持久化
- ModeManager.java: 核心模式管理类，实现完整的模式切换和时间管理逻辑

🔧 核心功能特性:
- 状态持久化：支持JSON格式的配置文件存储
- 时间管理：完整的倒计时和进度计算功能
- 模式切换：支持普通模式和学习模式的切换
- 监听器机制：支持UI更新的回调通知
- 自动过期检测：学习模式到期自动切换回普通模式
- 配置验证：时长范围验证和错误处理

📋 项目状态:
- 编译状态：✅ 成功编译，无语法错误
- 依赖下载：✅ Jackson依赖已成功下载
- 代码质量：✅ 完整的注释和错误处理
- TODO更新：✅ 标记第一阶段所有任务完成

Co-authored-by: Assistant <assistant@anthropic.com> 